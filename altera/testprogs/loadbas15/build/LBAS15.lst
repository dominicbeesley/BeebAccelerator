ca65 V2.18 - Git edfda72a
Main file   : LBAS15.asm
Current file: LBAS15.asm

000000r 1               
000000r 1               
000000r 1               MOSVAR_CURLANG 	= $28C
000000r 1               
000000r 1               zp_mos_currom	= $F4
000000r 1               
000000r 1               sheila_romsel	= $FE30
000000r 1               
000000r 1               OSWRCH = $FFEE
000000r 1               
000000r 1               		.zeropage
000000r 1  xx xx        zp_ptr:		.res	2		; rom pointer
000002r 1  xx xx        zp_printptr:	.res	2
000004r 1               
000004r 1               		.code
000000r 1  A5 F4        main:		lda	zp_mos_currom
000002r 1  48           		pha
000003r 1               
000003r 1               
000003r 1  20 rr rr     		jsr	printIm
000006r 1  43 6F 70 79  		.byte	"Copy to 15",13,10,0
00000Ar 1  20 74 6F 20  
00000Er 1  31 35 0D 0A  
000013r 1               
000013r 1  AD 8C 02     		lda	MOSVAR_CURLANG
000016r 1  C9 0F        		cmp	#15
000018r 1  D0 27        		bne	main_slot_ok
00001Ar 1               
00001Ar 1  00           		brk
00001Br 1  FF 43 75 72  		.byte	255, "Current language is already slot #15", 0
00001Fr 1  72 65 6E 74  
000023r 1  20 6C 61 6E  
000041r 1               
000041r 1               main_slot_ok:
000041r 1               		; check rom #15 writeable
000041r 1               
000041r 1  20 rr rr     		jsr	printIm
000044r 1  43 68 65 63  		.byte	"Check writeable...",13,10,0
000048r 1  6B 20 77 72  
00004Cr 1  69 74 65 61  
000059r 1               
000059r 1  78           		sei
00005Ar 1  A9 0F        		lda	#15
00005Cr 1  85 F4        		sta	zp_mos_currom
00005Er 1  8D 30 FE     		sta	sheila_romsel
000061r 1  A9 00        		lda	#0
000063r 1  8D 00 80     		sta	$8000
000066r 1  4D 00 80     		eor	$8000
000069r 1  D0 0A        		bne	nowrite
00006Br 1  A9 FF        		lda	#$FF
00006Dr 1  8D 00 80     		sta	$8000
000070r 1  4D 00 80     		eor	$8000
000073r 1  F0 35        		beq	okwrite
000075r 1               
000075r 1  AD 8C 02     nowrite:	lda	MOSVAR_CURLANG
000078r 1  85 F4        		sta	zp_mos_currom
00007Ar 1  8D 30 FE     		sta	sheila_romsel
00007Dr 1               
00007Dr 1  00           		brk
00007Er 1  FF 52 4F 4D  		.byte	255, "ROM slot 15 doesn't appear to be writeable",0
000082r 1  20 73 6C 6F  
000086r 1  74 20 31 35  
0000AAr 1               
0000AAr 1               okwrite:
0000AAr 1  20 rr rr     		jsr	printIm
0000ADr 1  43 6C 65 61  		.byte	"Clear rom #15...",13,10,0
0000B1r 1  72 20 72 6F  
0000B5r 1  6D 20 23 31  
0000C0r 1               
0000C0r 1               		; clear ROM #15 first page
0000C0r 1  20 rr rr     		jsr	clearStart
0000C3r 1  20 rr rr     		jsr	clearCheck
0000C6r 1  F0 29        		beq	main_ok_clear
0000C8r 1               
0000C8r 1  20 rr rr     		jsr	printIm
0000CBr 1  46 61 69 6C  		.byte	"Failed to clear at ",0
0000CFr 1  65 64 20 74  
0000D3r 1  6F 20 63 6C  
0000DFr 1  20 rr rr     		jsr	printHexXY
0000E2r 1               
0000E2r 1  00           		brk
0000E3r 1  FF 43 6C 65  		.byte	255, "Clear failed",0
0000E7r 1  61 72 20 66  
0000EBr 1  61 69 6C 65  
0000F1r 1               main_ok_clear:
0000F1r 1               
0000F1r 1  20 rr rr     		jsr 	printIm
0000F4r 1  53 74 61 72  		.byte	"Starting copy....",0
0000F8r 1  74 69 6E 67  
0000FCr 1  20 63 6F 70  
000106r 1               
000106r 1               		; copy current language to rom
000106r 1  20 rr rr     		jsr	doCopy
000109r 1  F0 68        		beq	alldone
00010Br 1               
00010Br 1  20 rr rr     		jsr	printIm
00010Er 1  43 6F 70 79  		.byte	"Copy failed at",0
000112r 1  20 66 61 69  
000116r 1  6C 65 64 20  
00011Dr 1  20 rr rr     		jsr	printHexXY
000120r 1  20 rr rr     		jsr	printIm
000123r 1  72 65 61 64  		.byte	"read back ",0
000127r 1  20 62 61 63  
00012Br 1  6B 20 00     
00012Er 1  A0 00        		ldy	#0
000130r 1  B1 rr        		lda	(zp_ptr),Y
000132r 1  20 rr rr     		jsr	printHexA
000135r 1  20 rr rr     		jsr	printIm
000138r 1  65 78 70 65  		.byte   "expected ",0
00013Cr 1  63 74 65 64  
000140r 1  20 00        
000142r 1  AE 8C 02     		ldx	MOSVAR_CURLANG
000145r 1  86 F4        		stx	zp_mos_currom
000147r 1  8E 30 FE     		stx	sheila_romsel
00014Ar 1  A0 00        		ldy	#0
00014Cr 1  B1 rr        		lda	(zp_ptr),Y
00014Er 1  20 rr rr     		jsr	printHexA
000151r 1  20 rr rr     		jsr	printIm
000154r 1               
000154r 1  20 rr rr     		jsr	printIm
000157r 1  0D 0A 00     		.byte	13,10,0
00015Ar 1               
00015Ar 1  00           		brk
00015Br 1  FF 43 6F 70  		.byte	255, "Copy to slot 15 failed",0
00015Fr 1  79 20 74 6F  
000163r 1  20 73 6C 6F  
000173r 1               
000173r 1               
000173r 1               alldone:
000173r 1  58           		cli
000174r 1  20 rr rr     		jsr	printIm
000177r 1  4F 4B 20 2D  		.byte	"OK - press CTRL-break",13,10,0
00017Br 1  20 70 72 65  
00017Fr 1  73 73 20 43  
00018Fr 1               
00018Fr 1               		; put back original rom
00018Fr 1  68           		pla
000190r 1  85 F4        		sta	zp_mos_currom
000192r 1  8D 30 FE     		sta	sheila_romsel
000195r 1  60           		rts
000196r 1               
000196r 1               
000196r 1               doCopy:
000196r 1  20 rr rr     		jsr	resetPtr
000199r 1  AE 8C 02     @lp:		ldx	MOSVAR_CURLANG
00019Cr 1  86 F4        		stx	zp_mos_currom
00019Er 1  8E 30 FE     		stx	sheila_romsel
0001A1r 1  B1 rr        		lda	(zp_ptr),Y
0001A3r 1  A2 0F        		ldx	#15
0001A5r 1  86 F4        		stx	zp_mos_currom
0001A7r 1  8E 30 FE     		stx	sheila_romsel
0001AAr 1  91 rr        		sta	(zp_ptr),Y
0001ACr 1  51 rr        		eor	(zp_ptr),Y
0001AEr 1  D0 0C        		bne	@notok
0001B0r 1  C8           		iny
0001B1r 1  D0 E6        		bne	@lp
0001B3r 1  E6 rr        		inc	zp_ptr+1
0001B5r 1  A6 rr        		ldx	zp_ptr+1
0001B7r 1  E0 C0        		cpx	#$C0
0001B9r 1  D0 DE        		bne	@lp
0001BBr 1  60           		rts
0001BCr 1  20 rr rr     @notok:		jsr	addYPtr
0001BFr 1  60           		rts
0001C0r 1               
0001C0r 1  20 rr rr     clearStart:	jsr	resetPtr
0001C3r 1  91 rr        @lp:		sta	(zp_ptr),Y
0001C5r 1  C8           		iny
0001C6r 1  D0 FB        		bne	@lp
0001C8r 1  E6 rr        		inc	zp_ptr+1
0001CAr 1  A6 rr        		ldx	zp_ptr+1
0001CCr 1  E0 C0        		cpx	#$C0
0001CEr 1  D0 F3        		bne	@lp
0001D0r 1  60           		rts
0001D1r 1               
0001D1r 1  20 rr rr     clearCheck:	jsr	resetPtr
0001D4r 1  B1 rr        @lp:		lda	(zp_ptr),Y
0001D6r 1  D0 0C        		bne	@sk_no
0001D8r 1  C8           		iny
0001D9r 1  D0 F9        		bne	@lp
0001DBr 1  E6 rr        		inc	zp_ptr+1
0001DDr 1  A6 rr        		ldx	zp_ptr+1
0001DFr 1  E0 C0        		cpx	#$C0
0001E1r 1  D0 F1        		bne	@lp
0001E3r 1  60           		rts
0001E4r 1  20 rr rr     @sk_no:		jsr	addYPtr		; should leave Z clear
0001E7r 1  60           		rts
0001E8r 1               
0001E8r 1  98           addYPtr:	tya
0001E9r 1  18           		clc
0001EAr 1  65 rr        		adc	zp_ptr
0001ECr 1  85 rr        		sta	zp_ptr
0001EEr 1  AA           		tax
0001EFr 1  A9 00        		lda	#0
0001F1r 1  65 rr        		adc	zp_ptr+1
0001F3r 1  85 rr        		sta	zp_ptr+1
0001F5r 1  A8           		tay
0001F6r 1  60           		rts
0001F7r 1               
0001F7r 1               
0001F7r 1  A9 80        resetPtr:	lda	#$80
0001F9r 1  85 rr        		sta	zp_ptr+1
0001FBr 1  A0 00        		ldy	#0
0001FDr 1  84 rr        		sty	zp_ptr
0001FFr 1  98           		tya
000200r 1  60           		rts
000201r 1               
000201r 1  48           printIm:	pha
000202r 1  8A           		txa
000203r 1  48           		pha
000204r 1  98           		tya
000205r 1  48           		pha
000206r 1               
000206r 1  BA           		tsx
000207r 1               
000207r 1  BD 04 01     		lda	$104,X
00020Ar 1  85 rr        		sta	zp_printptr
00020Cr 1  BD 05 01     		lda	$105,X
00020Fr 1  85 rr        		sta	zp_printptr+1
000211r 1  A0 01        		ldy	#1
000213r 1  B1 rr        @lp:		lda	(zp_printptr),Y
000215r 1  F0 08        		beq	@sk
000217r 1  20 EE FF     		jsr	OSWRCH
00021Ar 1  C8           		iny
00021Br 1  D0 F6        		bne	@lp
00021Dr 1  E6 rr        		inc	zp_printptr+1
00021Fr 1  18           @sk:		clc
000220r 1  98           		tya
000221r 1  65 rr        		adc	zp_printptr
000223r 1  9D 04 01     		sta	$104,X
000226r 1  A9 00        		lda	#0
000228r 1  65 rr        		adc	zp_printptr+1
00022Ar 1  9D 05 01     		sta	$105,X
00022Dr 1  68           		pla
00022Er 1  A8           		tay
00022Fr 1  68           		pla
000230r 1  AA           		tax
000231r 1  68           		pla
000232r 1  60           		rts
000233r 1               
000233r 1  48           printHexA:	pha
000234r 1  4A           		lsr	a
000235r 1  4A           		lsr	a
000236r 1  4A           		lsr	a
000237r 1  4A           		lsr	a
000238r 1  20 rr rr     		jsr	printHexNybA
00023Br 1  68           		pla
00023Cr 1  48           		pha
00023Dr 1  20 rr rr     		jsr	printHexNybA
000240r 1  68           		pla
000241r 1  60           		rts
000242r 1  29 0F        printHexNybA:	and	#$0F
000244r 1  C9 0A        		cmp	#10
000246r 1  90 02        		bcc	@1
000248r 1  69 06        		adc	#'A'-'9'-2
00024Ar 1  69 30        @1:		adc	#'0'
00024Cr 1  20 EE FF     		jsr	OSWRCH
00024Fr 1  60           		rts
000250r 1               
000250r 1  48           printHexXY:	pha
000251r 1  98           		tya
000252r 1  20 rr rr     		jsr	printHexA
000255r 1  8A           		txa
000256r 1  20 rr rr     		jsr	printHexA
000259r 1  68           		pla
00025Ar 1  60           		rts
00025Br 1               
00025Br 1               
00025Br 1               
